version: "3.8"

services:
  traefik:
    image: traefik:latest
    restart: always
    ports:
      - 80:80
      - 443:443
    command:
      - --accesslog
      - --log.level=INFO
      - --api.dashboard=true
      - --api.insecure=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
      - --entrypoints.web-secure.address=:443
      #- --certificatesresolvers.letsencrypt.acme.tlschallenge=true
      #- --certificatesresolvers.letsencrypt.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory
      #- --certificatesresolvers.letsencrypt.acme.email=admin@wpdev.test
      #- --certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - traefik:/letsencrypt
    labels:
      - traefik.enable=true
      - traefik.http.routers.api.rule=Host(`${TRAEFIK_URL}`)
      - traefik.http.routers.api.entrypoints=web
      - traefik.http.routers.api.service=api@internal
      #- traefik.http.services.traefik.loadbalancer.server.port=8080
      #- traefik.http.routers.api.entrypoints=web-secure
      #- traefik.http.routers.api.tls=true
      #- traefik.http.routers.api.tls.certresolver=letsencrypt
  nginx:
    image: nginx:alpine
    restart: always
    depends_on:
      - wordpress
    expose:
      - 80
      - 443
    volumes:
      - ./nginx/conf:/etc/nginx/conf.d
      - ./nginx/logs:/var/log/nginx
      - ./wordpress:/var/www/html
    labels:
      - traefik.enable=true
      - traefik.http.routers.wordpress.rule=Host(`${WP_URL}`, `${WP_WWW_URL}`)
      - traefik.http.routers.wordpress.entrypoints=web
      #- traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https
      #- traefik.http.routers.wordpress.middlewares=redirect-to-https@docker
      #- traefik.http.routers.wordpress-secure.rule=Host(`${WP_URL}`, `${WP_WWW_URL}`)
      #- traefik.http.routers.wordpress-secure.entrypoints=web-secure
      #- traefik.http.routers.wordpress-secure.tls.certresolver=letsencrypt
  wordpress:
    image: wordpress:php8.0-fpm-alpine
    restart: always
    depends_on:
      - mariadb
      - redis
    expose:
      - 9000
    environment:
      WORDPRESS_DB_HOST: mariadb
      WORDPRESS_DB_NAME: ${WP_DB_NAME}
      WORDPRESS_DB_USER: ${WP_DB_USER}
      WORDPRESS_DB_PASSWORD: ${WP_DB_PASSWORD}
      WORDPRESS_TABLE_PREFIX: ${WP_DB_PREFIX}
      WORDPRESS_CONFIG_EXTRA: define( 'WP_REDIS_HOST', 'redis' );
        define( 'WP_REDIS_PORT', 6379 );
        define( 'COMPRESS_CSS', true );
        define( 'COMPRESS_SCRIPTS', true );
        define( 'CONCATENATE_SCRIPTS', true );
        define( 'ENFORCE_GZIP', true );
        define( 'AUTOSAVE_INTERVAL', 120 );
        define( 'WP_POST_REVISIONS', 10);
        define( 'MEDIA_TRASH', true );
        define( 'EMPTY_TRASH_DAYS', 30 );
        define( 'IMAGE_EDIT_OVERWRITE', true );
        define( 'DISALLOW_FILE_EDIT', true );
    volumes:
      - ./wordpress:/var/www/html
      - ./wordpress.ini:/usr/local/etc/php/conf.d/wordpress.ini
  mariadb:
    image: mariadb:latest
    restart: always
    expose:
      - 3306
    environment:
      MYSQL_DATABASE: ${WP_DB_NAME}
      MYSQL_USER: ${WP_DB_USER}
      MYSQL_PASSWORD: ${WP_DB_PASSWORD}
      MYSQL_RANDOM_ROOT_PASSWORD: "1"
    volumes:
      - mariadb:/var/lib/mysql
  adminer:
    image: adminer:latest
    restart: always
    depends_on:
      - mariadb
    expose:
      - 8080
    labels:
      - traefik.enable=true
      - traefik.http.routers.adminer.rule=Host(`${ADMINER_URL}`)
      - traefik.http.routers.adminer.entrypoints=web
      #- traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https
      #- traefik.http.routers.adminer.middlewares=redirect-to-https@docker
      #- traefik.http.routers.adminer-secure.rule=Host(`${ADMINER_URL}`)
      #- traefik.http.routers.adminer-secure.entrypoints=web-secure
      #- traefik.http.routers.adminer-secure.tls.certresolver=letsencrypt
  redis:
    build:
      context: ./redis
      dockerfile: Dockerfile
    image: redis:7.4-alpine
    restart: always
    expose:
      - 6379
    command:
      - sh -c "./init.sh"
    volumes:
      - redis:/var/lib/redis
      - redis:/data
