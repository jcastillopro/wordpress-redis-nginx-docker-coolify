# Upstream to abstract backend connection(s) for php
# upstream wordpress {
#         #server unix:/var/run/php/php-cgi.socket;
#         server wordpress:9000;
# }

## Redirect to https in case reverse proxy did not
server {
    listen      80;
    server_name ${DOMAIN};
    return 301 https://$host$request_uri;
}

server {
        listen 443 ssl http2;
        ## Your website name goes here.
        server_name ${DOMAIN};
        ## Your only path reference.
        root /var/www/html;
        ## This should be in your http block and if it is, it's not needed here.
        index index.php;

        access_log /var/log/nginx/access.log;
        error_log /var/log/nginx/error.log;

        # gzip on;
        # gzip_disable "msie6";

        # gzip_vary on;
        # gzip_proxied any;
        # gzip_comp_level 6;
        # gzip_buffers 16 8k;
        # gzip_http_version 1.1;
        # gzip_min_length 0;
        # gzip_types text/plain application/javascript text/css text/xml application/xml application/xml+rss text/javascript application/vnd.ms-fontobject application/x-font-ttf font/opentype;

        # client_max_body_size ${CLIENT_MAX_BODY_SIZE};

        location = /favicon.ico {
                log_not_found off;
                access_log off;
        }

        location = /robots.txt {
                allow all;
                log_not_found off;
                access_log off;
        }

        # Deny all attempts to access hidden files such as .htaccess, .htpasswd, .DS_Store (Mac).
        location ~ /\. {
            deny all;
        }
        
        # Deny access to any files with a .php extension in the uploads directory
        # Works in sub-directory installs and also in multisite network
        location ~* /(?:uploads|files)/.*\.php$ {
            deny all;
        }

        location / {
                # This is cool because no php is touched for static content.
                # include the "?$args" part so non-default permalinks doesn't break when using query string
                try_files $uri $uri/ /index.php?$args;
        }

        location ~ \.php$ {
                #NOTE: You should have "cgi.fix_pathinfo = 0;" in php.ini
                # include fastcgi_params;
                # fastcgi_intercept_errors on;
                # fastcgi_pass php;
                #The following parameter can be also included in fastcgi_params file
                # fastcgi_param  SCRIPT_FILENAME $document_root$fastcgi_script_name;
        }

        # Caching of media: images, icons, video, audio
        location ~* \.(jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm|htc|woff|woff2)$ {
                expires max;
                log_not_found off;
        }

        # CSS and JavaScript
        location ~* \.(css|js)$ {
                expires max;
                log_not_found off;
        }
}